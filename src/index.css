@import "tailwindcss";

/*
  Base/Default theme (can be the 'Persona' theme itself, or a generic default)
  The @theme directive automatically creates corresponding utility classes
  (e.g., --color-primary will create bg-primary, text-primary, border-primary etc.)
*/
@theme {
  /* Colors */
  --color-primary: #e62323; /* Persona's iconic red */
  --color-secondary: #fcd34d; /* Persona's yellow */
  --color-text-base: #2d3748; /* Dark text */
  --color-text-muted: #718096; /* Muted text */
  --color-background: #fefcbf; /* Light yellow background */
  --color-surface: #ffffff; /* Card/surface background */
  --color-border: #fed7aa; /* Peach border */
}

@keyframes flash {
  0%,
  50%,
  100% {
    opacity: 1;
  }
  25% {
    opacity: 0.75;
  }
}

@keyframes leaveAnimation {
  0% {
    /* Start from active state (flashing) */
    width: 100%;
    height: 200%;
    /* animation: flash 2s infinite; */
  }
  30% {
    /* Transition to hover state */
    width: 100%;
    height: 100%;
  }
  100% {
    /* End at original state */
    width: 0%;
    height: 100%;
    opacity: 1;
  }
}

@keyframes leaveBorderAnimation {
  0% {
    opacity: 0;
  }
  30% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

@keyframes growUp {
  0% {
    transform: scaleY(0);
  }
  100% {
    transform: scaleY(1);
  }
}

/* Nier Theme - Overrides values when data-theme='nier' is applied */
html[data-theme="nier"] {
  /* Colors */
  --color-primary: #838383; /* Example Nier primary */
  --color-secondary: #e2e8f0; /* Example Nier secondary */

  --color-text-base: #464132; /* $color from your snippet */
  --color-text-muted: #718096; /* Example muted text */

  --color-background: #c8c2aa; /* $bgColor from your snippet */
  --color-surface: #f8f8f0; /* A slightly lighter surface if needed */
  --color-border: #4d493e; /* Border color matching $color */

  /* Define the color used for the grid lines as an RGB variable */
  --color-grid-line-rgb: 255 0 0; /* Black for rgba(0,0,0,.07) */

  --font-sans: "Noto Sans", sans-serif; /* As per your snippet */
  --font-serif: "Times New Roman", serif;

  --radius-base: 0rem; /* No rounded corners */
  --shadow-base: none; /* No shadows */

  body {
    background-color: var(--color-background);
    background-size: 4px 4px;
    background-image:
      linear-gradient(
        90deg,
        transparent,
        transparent 3px,
        rgba(0, 0, 0, 0.07) 4px
      ),
      linear-gradient(transparent, transparent 3px, rgba(0, 0, 0, 0.07) 4px);
    background-repeat: repeat; /* Crucial for grids! Ensure the pattern tiles */
    /* Inner box shadow */
    box-shadow:
      inset 0 0 150px rgba(var(--color-text-base-rgb), 0.4),
      inset 0 0 150px rgba(var(--color-text-base-rgb), 0.3);

    /* Other body styles */
    color: var(--color-text-base);
    font-family: var(--font-sans);
    font-weight: 300;
    margin: 0;
    min-height: 100vh; /* Important for seeing the background fully */
    display: flex;
    flex-direction: column;
    letter-spacing: 0.1rem;
  }

  h1 {
    text-transform: uppercase;
    font-weight: 300;
    letter-spacing: 0.5rem;
    text-shadow: 0.3rem 0.3rem 0 rgba(77, 73, 62, 0.3);
    font-size: 2em;
  }

  a {
    background-color: #aca894;
    text-transform: uppercase;
    padding: 0.1rem 1rem;
    position: relative;
    z-index: 1;
    transition: color 0.15s ease;

    &::before {
      content: "";
      position: absolute;
      top: -3px;
      left: 0px;
      bottom: -3px;
      border-top: 1px solid var(--color-text-base);
      border-bottom: 1px solid var(--color-text-base);
      width: 100%;
      opacity: 0;
      transition: opacity 0.15s ease;
    }

    &::after {
      content: "";
      position: absolute;
      left: 0px;
      top: 0px;
      width: 0%;
      height: 0%;
      background-color: var(--color-text-base);
      transition: width 0.15s ease;
      z-index: -1;
    }

    &:hover {
      color: var(--color-background);
    }

    &:hover::after {
      width: 100%;
      height: 100%;
    }

    &:hover::before {
      opacity: 100%;
    }

    &.active {
      color: var(--color-background);
    }

    &.active::before {
      opacity: 0;
    }

    &.active::after {
      width: 100%;
      height: 200%;
      animation: flash 2s infinite;
    }

    &.leaving {
      color: var(--color-background);
    }
    &.leaving::after {
      animation: leaveAnimation 0.3s ease-out forwards;
    }

    &.leaving::before {
      animation: leaveBorderAnimation 0.3s ease-out forwards;
    }
  }

  .dividers {
    position: relative;
    width: 10px;
    height: 2em;
    margin-right: 2em;

    &::before {
      content: "";
      position: absolute;
      left: 0;
      top: 0;
      width: 5px;
      height: 100%;
      background-color: #838170;
      transform-origin: center;
      animation: growUp 0.3s ease-out forwards;
    }

    &::after {
      content: "";
      position: absolute;
      right: 0;
      top: 0;
      width: 2px;
      height: 100%;
      background-color: #838170;
      transform-origin: center;
      animation: growUp 0.3s ease-out forwards;
    }
  }

  .white-space {
    margin-left: 2em;
  }
}
